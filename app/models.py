# Not currently using sqlalchemy
# from flask_sqlalchemy import SQLAlchemy

# db = SQLAlchemy()

# class Assessment(db.Model):
#     taxonid = db.Column(db.Integer, primary_key=True)
#     scientific_name = db.Column(db.String(60), unique=True)
#     kingdom = db.Column(db.String(8))
#     phylum = db.Column(db.String(13))
#     class_name = db.Column(db.String(14))
#     order_name = db.Column(db.String(20))
#     family = db.Column(db.String(20))
#     genus = db.Column(db.String(25))
#     main_common_name = db.Column(db.String)
#     authority = db.Column(db.String)
#     published_year = db.Column(db.SmallInteger)
#     assessment_date = db.Column(db.Date)
#     category = db.Column(db.String(5))
#     criteria = db.Column(db.String)
#     population_trend = db.Column(db.String(10))
#     marine_system = db.Column(db.Boolean)
#     freshwater_system = db.Column(db.Boolean)
#     terrestrial_system = db.Column(db.Boolean)
#     assessor = db.Column(db.String)
#     reviewer = db.Column(db.String)
#     aoo_km2 = db.Column(db.String)
#     eoo_km2 = db.Column(db.String)
#     elevation_upper = db.Column(db.Float)
#     elevation_lower = db.Column(db.Float)
#     depth_upper = db.Column(db.Float)
#     depth_lower = db.Column(db.Float)
#     errata_flag = db.Column(db.Boolean)
#     errata_reason = db.Column(db.String)
#     amended_flag = db.Column(db.Boolean)
#     amended_reason = db.Column(db.String)
#     country_occurrence = db.relationship('Occurrence', backref='assessment', lazy=True)
#     habitat = db.relationship('Habitat', backref='assessment', lazy=True)
#     threat = db.relationship('Threat', backref='assessment', lazy=True)
#     #common = db.relationship('CommonName', backref='assessment', lazy=True)
#     history = db.relationship('History', backref='assessment')

# class Occurrence(db.Model):
#     __tablename__ = 'country_occurrence'
#     taxonid = db.Column(db.Integer, db.ForeignKey('assessment.taxonid'), primary_key=True)
#     country = db.Column(db.String(2), primary_key=True)
#     presence = db.Column(db.String(17))
#     origin = db.Column(db.String(12))
#     distribution = db.Column(db.String(12))

# class Habitat(db.Model):
#     taxonid = db.Column(db.Integer, db.ForeignKey('assessment.taxonid'), primary_key=True)
#     code = db.Column(db.String(6), primary_key=True)
#     suitability = db.Column(db.String(8))
#     season = db.Column(db.String(27))
#     majorimportance = db.Column(db.String(3))

# class Threat(db.Model):
#     taxonid = db.Column(db.Integer, db.ForeignKey('assessment.taxonid'), primary_key=True)
#     code = db.Column(db.String(6), primary_key=True)
#     timing = db.Column(db.String(24))
#     scope = db.Column(db.String(17))
#     severity = db.Column(db.String(32))
#     score = db.Column(db.String(1))
#     invasive = db.Column(db.String)

# # class CommonName(db.Model):
# #     scientific = db.Column(db.String(60), db.ForeignKey('assessment.scientific_name'), primary_key=True)
# #     common = db.Colunm(db.String(42))
# #     is_primary = db.Column(db.Boolean)
# #     language = db.Column(db.String(3))

# class History(db.Model):
#     rid = db.Column('id', db.Integer, primary_key=True)
#     taxonid = db.Column(db.Integer, db.ForeignKey('assessment.taxonid'))
#     y2000 = db.Column(db.String(2))
#     y2001 = db.Column(db.String(2))
#     y2002 = db.Column(db.String(2))
#     y2003 = db.Column(db.String(2))
#     y2004 = db.Column(db.String(2))
#     y2005 = db.Column(db.String(2))
#     y2006 = db.Column(db.String(2))
#     y2007 = db.Column(db.String(2))
#     y2008 = db.Column(db.String(2))
#     y2009 = db.Column(db.String(2))
#     y2010 = db.Column(db.String(2))
#     y2011 = db.Column(db.String(2))
#     y2012 = db.Column(db.String(2))
#     y2013 = db.Column(db.String(2))
#     y2014 = db.Column(db.String(2))
#     y2015 = db.Column(db.String(2))
#     y2016 = db.Column(db.String(2))
#     y2017 = db.Column(db.String(2))
#     y2018 = db.Column(db.String(2))
#     y2019 = db.Column(db.String(2))
#     y2020 = db.Column(db.String(2))